---
name: Terraform Plan

on:
  pull_request:
    paths:
      - infrastructure/**
      - .github/workflows/terraform-*

env:
  TF_IN_AUTOMATION: true
  TF_TOKEN_app_terraform_io: ${{ secrets.TF_TOKEN }}
  TF_VAR_cloudflare_api_token: ${{ secrets.CLOUDFLARE_API_TOKEN }}
  TF_VAR_cloudflare_account_id: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}

jobs:
  terraform-ci:
    runs-on: ubuntu-latest
    # container: antonmircea/terraform # FIXME
    defaults:
     run:
       shell: bash
       working-directory: infrastructure/

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7
          terraform_wrapper: false

      - name: Verify format and style
        id: fmt
        run: |
          terraform fmt
          exit $?
        continue-on-error: true

      - name: Initialize
        id: init
        run: terraform init
        continue-on-error: true

      - name: Validate
        id: validate
        run: terraform validate
        continue-on-error: true

      - name: Plan
        id: plan
        run: |
          echo 'plan<<EOF' >> $GITHUB_OUTPUT
          terraform plan -no-color -out=tfplan >> $GITHUB_OUTPUT
          echo 'EOF' >> $GITHUB_OUTPUT
        continue-on-error: true

      - name: Comment Plan
        id: comment-plan
        uses: peter-evans/create-or-update-comment@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.number }}
          body: |
            #### Terraform Format and Style üñå: `${{ steps.fmt.outcome }}`
            #### Terraform Initialization ‚öôÔ∏è: `${{ steps.init.outcome }}`
            #### Terraform Validation ü§ñ: `${{ steps.validate.outcome }}`
            #### Terraform Plan üìñ: `${{ steps.plan.outcome }}`

            ```bash
            ${{ steps.plan.outputs.plan }}
            ```

      - name: Set Pipeline Status
        if: ${{ failure() }}
        run: exit 1
